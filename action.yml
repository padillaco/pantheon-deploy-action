name: 'Deploy to Pantheon'
description: 'Deploys local GitHub repo to Pantheon.'
author: 'padillaco'
branding:
  icon: 'cloud-lightning'
  color: 'yellow'
inputs:
  base_directory:
    description: 'Base directory for rsync'
    required: false
  destination_directory:
    description: 'Destination directory for rsync in remote repository'
    required: false
  exclude_list:
    description: 'Comma-separated list of files and directories to exclude from sync'
    required: false
    default: '.git, .github, .gitmodules, node_modules'
  ssh_key:
    description: 'SSH key to use for remote repository authentication.'
    required: true
  pantheon_site:
    description: 'Name of Pantheon site to deploy to.'
    required: true
  pantheon_site_id:
    description: 'Pantheon site ID to deploy to.'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Collect Branch Name Base
      shell: bash
      env:
        CURRENT_BRANCH: ${{ github.ref_name }}
      id: branch-name-base
      run: echo "name=$(echo CURRENT_BRANCH | cut -d '/' -f1)" >> $GITHUB_OUTPUT
    - name: Collect Branch Name Fragment
      shell: bash
      env:
        CURRENT_BRANCH: ${{ github.ref_name }}
      id: branch-name-fragment
      run: echo "name=$(echo CURRENT_BRANCH | cut -d '/' -f2)" >> $GITHUB_OUTPUT
    - name: Install rsync
      run: sudo apt-get install -y rsync
      shell: bash
    - name: Deploy to Pantheon
      if: ${{ github.ref_name == 'develop' || steps.branch-name-base.outputs.name == 'multidev' }}
      shell: bash
      id: deploy-to-remote-repository
      env:
        BASE_DIRECTORY: ${{ inputs.base_directory }}
        DESTINATION_DIRECTORY: ${{ inputs.destination_directory }}
        EXCLUDE_LIST: ${{ inputs.exclude_list }}
        GIT_SSH_COMMAND: ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i ~/.ssh/private_key
        REMOTE_BRANCH: ${{ github.ref_name == 'develop' && 'master' || steps.branch-name-fragment.outputs.name }}
        REMOTE_REPO_DIR: /tmp/remote_repo
        REMOTE_REPO: 'ssh://codeserver.dev.${{ inputs.pantheon_site_id }}@codeserver.dev.${{ inputs.pantheon_site_id }}.drush.in:2222/~/repository.git'
        SSH_KEY: ${{ inputs.ssh_key }}
      run: ${{ github.action_path }}/deploy-to-remote-repository.sh
